{"version":3,"sources":["./src/main/webapp/app/s3/s3.component.html","./src/main/webapp/app/s3/s3.component.ts","./src/main/webapp/app/service/s3.service.ts","./src/main/webapp/main.ts","./src/main/webapp/environments/environment.ts","./src/main/webapp/app/app-routing.module.ts","./src/main/webapp/app/app.component.ts","./src/main/webapp/app/app.component.html","./src/main/webapp/app/s3/s3-objects/s3-objects.component.html","./src/main/webapp/app/s3/s3-objects/s3-objects.component.ts","./src/main/webapp/app/app.module.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<p>s3 works!</p>\n\n<div >\n<h3> select a bucket below</h3>\n    <tr *ngFor=\"let bucket of buckets\">\n        <a href=\"javascript:void(0);\"  (click)=\"selectBucket(bucket.name)\">{{bucket.name}}</a>\n    </tr>\n</div>\n\n\n\n<div> \n    <s3-objects [bucketObjects] = \"bucketObjects\" ></s3-objects>>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Bucket } from '../model/bucket';\nimport { BucketObject } from '../model/bucket-object';\nimport { S3Service } from '../service/s3.service';\n\n@Component({\n  selector: 'app-s3',\n  templateUrl: './s3.component.html',\n  styleUrls: ['./s3.component.css']\n})\nexport class S3Component implements OnInit {\n\n  constructor(private s3Service: S3Service) { }\n\n  buckets: Array<Bucket>;\n  bucketObjects: Array<BucketObject>\n\n  ngOnInit(): void {\n    this.s3Service.getBuckets().subscribe(result =>{\n      console.log(this.buckets);\n      this.buckets = result;\n    }, error =>{\n      //Build error message\n      console.log(\"Error: \", error);\n    })\n  }\n\n  selectBucket(bucketName: String){\n    this.s3Service.getBucketContents(bucketName).subscribe(result =>{\n      console.log(result);\n      this.bucketObjects = result;\n    },\n    error =>{\n      console.log(\"ERROR: \", error)\n    }\n    )\n    console.log(\"BLEH\");\n  }\n\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Bucket } from '../model/bucket';\nimport { BucketObject } from '../model/bucket-object';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class S3Service {\n\n  constructor(private http: HttpClient) { }\n\n  getBuckets(): Observable<Array<Bucket>> {\n    return this.http.post<Array<Bucket>>('/s3/listBuckets','');\n  }\n\n  getBucketContents(bucketName: String): Observable<Array<BucketObject>>{\n    return this.http.post<Array<BucketObject>>('/s3/getBucketContents',bucketName)\n  }\n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'webapp';\n}\n","\n<!--Put a banner up here at some point or something. for now though this.  -->\n\n<h1>AWS Utility. V1.0</h1>\n\n<app-s3></app-s3>\n\n<router-outlet></router-outlet>","<div>\n    <tr *ngFor=\"let bucketObject of bucketObjects\">\n        <p>{{bucketObject.key}}</p>\n    </tr>\n</div> ","import { Component, Input, OnInit } from '@angular/core';\nimport { BucketObject } from '../../model/bucket-object';\n\n@Component({\n  selector: 's3-objects',\n  templateUrl: './s3-objects.component.html',\n  styleUrls: ['./s3-objects.component.css']\n})\nexport class S3ObjectsComponent implements OnInit {\n\n  constructor() { }\n\n  \n\n  @Input() bucketObjects: Array<BucketObject>;\n  \n\n  ngOnInit(): void {\n  }\n\n\n\n\n\n\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { S3Component } from './s3/s3.component';\nimport { S3Service } from './service/s3.service';\nimport { S3ObjectsComponent } from './s3/s3-objects/s3-objects.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    S3Component,\n    S3ObjectsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [S3Service],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}